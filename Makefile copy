# .PHONY: help
# help:
# 	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

# _install_latex:
# 	brew update && brew upgrade
# 	brew install --cask basictex
# 	brew install textidote
# _install_latex_dependencies:
# 	sudo tlmgr update --self
# 	sudo tlmgr install latexmk blindtext placeins biblatex biblatex-ieee multirow titlesec xpatch silence subfigure texdoc biber cleveref hyperref glossaries xindy csquotes float enumitem appendix pdfpages
# install: _install_latex _install_latex_dependencies ## Installs LaTeX on your system

# _build_bcf:
# 	cd src && pdflatex -file-line-error -interaction=nonstopmode -synctex=1 -output-format=dvi main.tex || true
# _build_bbl:
# 	cd src && biber main -q
# _build_glossary:
# 	cd src && makeglossaries main
# _build_pdf:
# 	cd src && pdflatex -file-line-error -interaction=nonstopmode -synctex=1 -output-format=pdf main.tex || true

# compile: _build_bcf _build_bbl _build_glossary _build_pdf ## Compile the LaTeX project

# lint: ## Lint the LaTeX project
# 	cd src && textidote main.tex > lint_report.html || true
# 	open src/lint_report.html


.PHONY: help
help:
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk "BEGIN {FS = \":.*?## \"}; {printf \"\033[36m%-30s\033[0m %s\n\", $$1, $$2}"

# Instalación de dependencias de LaTeX (para MikTeX)
_install_latex_dependencies:
	@echo "Instalando paquetes de LaTeX con MikTeX..."
	initexmf --update-fndb
	mpm --install=latexmk,blindtext,placeins,biblatex,biblatex-ieee,multirow,titlesec,xpatch,silence,subfigure,texdoc,biber,cleveref,hyperref,glossaries,xindy,csquotes,float,enumitem,appendix,pdfpages
	@echo "Paquetes instalados correctamente."

install: _install_latex_dependencies ## Instala dependencias LaTeX en Windows con MikTeX

# Compilación del proyecto
_build_bcf:
	cd src && pdflatex -file-line-error -interaction=nonstopmode -synctex=1 main.tex || exit 0

_build_bbl:
	cd src && biber main -q

_build_glossary:
	cd src && makeglossaries main

_build_pdf:
	cd src && pdflatex -file-line-error -interaction=nonstopmode -synctex=1 main.tex || exit 0

compile: _build_bcf _build_bbl _build_glossary _build_pdf ## Compila el proyecto LaTeX en PDF

# Linting del proyecto con textidote (requiere Java)
lint:
	@echo "Generando reporte de lint con textidote..."
	textidote src/main.tex > src/lint_report.html || exit 0
	@echo "Reporte de lint generado: src/lint_report.html"

clean: ## Limpia los archivos temporales generados por LaTeX
	cd src && del *.aux *.bbl *.bcf *.blg *.dvi *.glg *.glo *.gls *.ilg *.log *.out *.synctex.gz *.toc *.xml || exit 0
	@echo "Archivos temporales eliminados."

